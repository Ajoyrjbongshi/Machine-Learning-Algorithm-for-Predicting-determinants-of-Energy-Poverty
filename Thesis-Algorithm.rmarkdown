---
title: "Algorithm"
format: pdf
editor: visual
---

```{r,message=FALSE, warning=FALSE}
library(tidyverse)
library(haven)
library(palmerpenguins)
```


## Import dataset


```{r,message=FALSE}

#PR <- read_spss("BDPR7RFL.SAV")
hr <- read_spss("BDHR7RFL.SAV")

#PR_df <-PR |> 
# select(HV226, HV206, HV208, HV243A, HV221, HV209, HV242, HV025, HV220, HV219, HV106,               HV115, SH13, HV270, HV009) |> 
# rename(fuel= HV226, Electricity = HV206,
      #   Television = HV208, Mobile.phone = HV243A, Landline = HV221,
       #  Refrigerator = HV209, separate.kitchen = HV242, residence = HV025, age = HV220,
        # sex = HV219, education = HV106, marital.status = HV115, work.status = SH13,                 Wealth.index = HV270, Family.size = HV009) |> ## Renaming Variable
         #mutate(Cooking.fuel = cut(fuel,
          #                         breaks = c(1,5,10),
          #                         labels = c("Clean Fuel", "Not Clean"),
           #                        right = TRUE))


hr_df <- hr |> 
  select(HV226, HV206, HV208, HV243A, HV221, HV209, HV242, HV025, HV220, HV219, `HV106$01`,               `HV115$01`, `SH13$01`, HV270, HV009) |> 
  ## Renaming Variable
  rename(fuel= HV226, Electricity = HV206, Television = HV208,
         Mobile.phone = HV243A, Landline = HV221, Refrigerator = HV209,
         separate.kitchen = HV242, residence = HV025, age = HV220,
         sex = HV219, education = `HV106$01`, marital.status = `HV115$01`, 
         work.status = `SH13$01`, Wealth.index = HV270, Family.size = HV009) |> 
  
        mutate(cooking.fuel = case_when(fuel <= 5 ~ "clean",  ## Categories fuel into two categories
                                        fuel == 6 ~ "unclean", ## 1= Clean, 0 = Unclean
                                        fuel == 7 ~ "unclean",
                                        fuel == 8 ~ "unclean",
                                        fuel == 9 ~ "unclean",
                                        fuel == 10 ~ "unclean",
                                        fuel == 11 ~ "unclean",
                                        TRUE ~ NA),
               sex = case_when(sex == 2 ~ 0,
                               sex == 1 ~ 1),
               residence = case_when(residence == 1 ~ 1,
                                     residence ==2 ~ 0),
               marital.status = case_when(marital.status == 1 ~ 1,
                                          marital.status == 2 ~ 1,# 1 = Yes
                                          marital.status == 0 ~ 0,
                                          marital.status == 3 ~ 0,
                                          marital.status == 4 ~ 0,
                                          marital.status == 5 ~ 0) # 0 = No
               
        
        
        )



  
```


## Generate data from Normal Distribution


```{r}
x <- rnorm(1000,2,5)
hist(x)
```

```{r, message=FALSE}
penguins |> 
  ggplot(aes(x= bill_length_mm, fill = species))+
  geom_histogram(bins = 50, alpha=0.8) 


```


## Data Cleaning


```{r}
head(mtcars)
ggplot(mtcars,aes(x= disp,y=hp,col=as.factor(cyl)))+
  geom_point(alpha=0.7,size=3)+
  theme_minimal()


```

```{r, warning=FALSE}
library(tidyverse)
ikea <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-03/ikea.csv")

ikea <- rename(ikea, id = ...1)

ikea %>%
  select(id, price, depth:width) %>%
  pivot_longer(depth:width, names_to = "dim") %>%
  ggplot(aes(value, price, color = dim)) +
  geom_point(alpha = 0.4, show.legend = FALSE) +
  scale_y_log10() +
  facet_wrap(~dim, scales = "free_x") +
  labs(x = NULL) + 
  theme_minimal()



```

```{r}


ikea_df <- ikea %>%
  select(price, name, category, depth, height, width) %>%
  mutate(price = log10(price)) %>%
  mutate_if(is.character, factor)

ikea_df



```


#Building Model


```{r}

## Build Model 


library(tidymodels)

set.seed(123)
ikea_split <- initial_split(ikea_df, strata = price)
ikea_train <- training(ikea_split)
ikea_test <- testing(ikea_split)

set.seed(234)
ikea_folds <- bootstraps(ikea_train, strata = price)
ikea_folds



library(usemodels)
use_ranger(price ~ ., data = ikea_train)
## lots of options, like use_xgboost, use_glmnet, etc


library(textrecipes)
ranger_recipe <-
  recipe(formula = price ~ ., data = ikea_train) %>%
  step_other(name, category, threshold = 0.01) %>%
  step_clean_levels(name, category) %>%
  step_impute_knn(depth, height, width)

ranger_spec <-
  rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>%
  set_mode("regression") %>%
  set_engine("ranger")

ranger_workflow <-
  workflow() %>%
  add_recipe(ranger_recipe) %>%
  add_model(ranger_spec)

set.seed(8577)
doParallel::registerDoParallel()
ranger_tune <-
  tune_grid(ranger_workflow,
    resamples = ikea_folds,
    grid = 11
  )

show_best(ranger_tune, metric = "rmse")

show_best(ranger_tune, metric = "rsq")

autoplot(ranger_tune)

final_rf <- ranger_workflow %>%
  finalize_workflow(select_best(ranger_tune))

final_rf

ikea_fit <- last_fit(final_rf, ikea_split)
ikea_fit

collect_metrics(ikea_fit)

collect_predictions(ikea_fit) %>%
  ggplot(aes(price, .pred)) +
  geom_abline(lty = 2, color = "gray50") +
  geom_point(alpha = 0.5, color = "midnightblue") +
  coord_fixed()

predict(ikea_fit$.workflow[[1]], ikea_test[15, ])


library(vip)

imp_spec <- ranger_spec %>%
  finalize_model(select_best(ranger_tune)) %>%
  set_engine("ranger", importance = "permutation")

workflow() %>%
  add_recipe(ranger_recipe) %>%
  add_model(imp_spec) %>%
  fit(ikea_train) %>%
  pull_workflow_fit() %>%
  vip(aesthetics = list(alpha = 0.8, fill = "midnightblue"))


```

